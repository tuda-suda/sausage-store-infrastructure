---
groups:
  - name: Sausage store rules
    rules:
    - alert: BackendInstanceDown
      expr: up{app_kubernetes_io_name="backend"} == 0
      for: 1m
      labels:
        severity: critical
        project: "sausage_store"
        component: "Backend"
    - alert: BackendReportInstanceDown
      expr: up{app_kubernetes_io_name="backend-report"} == 0
      for: 1m
      labels:
        severity: critical
        project: "sausage_store"
        component: "Backend-report"
    - alert: FrontendInstanceDown
      expr: up{app_kubernetes_io_name="frontend"} == 0
      for: 1m
      labels:
        severity: critical
        project: "sausage_store"
        component: "Frontend"
    - alert: ActuatorPrometheusErrors
      expr: rate(http_server_requests_seconds_count{uri="/actuator/prometheus", status=~"[45].."}[2m]) > 0
      for: 5m
      labels:
        severity: critical
        project: "sausage_store"
    - alert: Error500ForBackend
      expr: rate(http_server_requests_seconds_count{uri=~"/api/.*", status="500"}[5m]) > 0
      for: 5m
      labels:
        severity: critical
        project: "sausage_store"
    - alert: SuccessfulPOSTtoOrdersTooLong
      expr: max(histogram_quantile(0.95, rate(http_server_requests_seconds_bucket{method="POST", uri="/api/orders", status!="[45].."}[5m]))) > 0.1
      for: 5m
      labels:
        severity: critical
        project: "sausage_store"